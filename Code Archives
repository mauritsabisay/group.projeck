As of 12/16/2021 @ 3:57:
    var bitmojiX = 100;
    var bitmojiY = 100;
    var bitmojiHeight = 100;

    var drawArthurBody = function(bitmojiX,bitmojiY,bitmojiHeight)
    {
        fill(255, 250, 255);
        stroke(0,0,0);
        quad(bitmojiX+(bitmojiHeight/100*125),bitmojiY+(bitmojiHeight/100*195),bitmojiX+(bitmojiHeight/100*175),bitmojiY+(bitmojiHeight/100*195),bitmojiX+(bitmojiHeight/100*186),bitmojiY     +(bitmojiHeight/100*255),bitmojiX+(bitmojiHeight/100*113),bitmojiY+(bitmojiHeight/100*255     ));//shirt
    
        fill(0, 0, 0);
        textSize(bitmojiHeight/100*37);
        text("AS",bitmojiX+(bitmojiHeight/100*125),bitmojiY+(bitmojiHeight/100*210));
    };
    
    var drawArthurHead = function(bitmojiX,bitmojiY,bitmojiHeight)
    {
        noStroke();
        fill(210, 155, 100);//skin
        ellipse(bitmojiX+(bitmojiHeight/100*150),bitmojiY+(bitmojiHeight/100*150),(bitmojiHeight     /100*80),(bitmojiHeight/100*95));//head
        
        fill(61, 38, 9);//brown hair
        quad(bitmojiX+(bitmojiHeight/100*179),bitmojiY+(bitmojiHeight/100*95),bitmojiX+(bitmojiHeight/100*178),bitmojiY+(bitmojiHeight/100*113),bitmojiX+(bitmojiHeight/100*121),bitmojiY     +(bitmojiHeight/100*113),bitmojiX+(bitmojiHeight/100*120),bitmojiY+(bitmojiHeight/100*95     ));//flat top
        quad(bitmojiX+(bitmojiHeight/100*120),bitmojiY+(bitmojiHeight/100*107),bitmojiX+(bitmojiHeight/100*127),bitmojiY+(bitmojiHeight/100*110),bitmojiX+(bitmojiHeight/100*111),bitmojiY     +(bitmojiHeight/100*142),bitmojiX+(bitmojiHeight/100*110),bitmojiY+(bitmojiHeight/100*142     ));//left sideburn
        quad(bitmojiX+(bitmojiHeight/100*172),bitmojiY+(bitmojiHeight/100*110),bitmojiX+(bitmojiHeight/100*179),bitmojiY+(bitmojiHeight/100*107),bitmojiX+(bitmojiHeight/100*191),bitmojiY     +(bitmojiHeight/100*142),bitmojiX+(bitmojiHeight/100*189),bitmojiY+(bitmojiHeight/100*142     ));//right sideburn
        stroke(0, 0, 0);
        fill(210,155,100);//skin
        ellipse(bitmojiX+(bitmojiHeight/100*135),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*28),(bitmojiHeight/100*17));//left lense
        ellipse(bitmojiX+(bitmojiHeight/100*165),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*28),(bitmojiHeight/100*17));//right lense
        fill(224, 13, 13);
        line(bitmojiX+(bitmojiHeight/100*111),bitmojiY+(bitmojiHeight/100*137),bitmojiX+(bitmojiHeight/100*119),bitmojiY+(bitmojiHeight/100*137));
        line(bitmojiX+(bitmojiHeight/100*180),bitmojiY+(bitmojiHeight/100*137),bitmojiX+(bitmojiHeight/100*189),bitmojiY+(bitmojiHeight/100*137));
        noStroke();
        fill(255, 255, 255);
        ellipse(bitmojiX+(bitmojiHeight/100*135),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*21),(bitmojiHeight/100*14));//left eye
        ellipse(bitmojiX+(bitmojiHeight/100*165),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*21),(bitmojiHeight/100*14));//right eye
        fill(94,72,30);
        ellipse(bitmojiX+(bitmojiHeight/100*135),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*10),(bitmojiHeight/100*10));//left eye color
        ellipse(bitmojiX+(bitmojiHeight/100*165),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*10),(bitmojiHeight/100*10));//right eye color
        fill(0, 0, 0);
        ellipse(bitmojiX+(bitmojiHeight/100*135),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*5),(bitmojiHeight/100*5));//left eye pupil
        ellipse(bitmojiX+(bitmojiHeight/100*165),bitmojiY+(bitmojiHeight/100*138),(bitmojiHeight     /100*5),(bitmojiHeight/100*5));//right eye pupil
        stroke(0, 0, 0);
        fill(210,155,100);
        bezier(bitmojiX+(bitmojiHeight/100*150),bitmojiY+(bitmojiHeight/100*147),bitmojiX            +(bitmojiHeight/100*171),bitmojiY+(bitmojiHeight/100*179),bitmojiX+(bitmojiHeight/100*145     ),bitmojiY+(bitmojiHeight/100*169),bitmojiX+(bitmojiHeight/100*147),bitmojiY+(bitmojiHeight/100*167));//nose
        noStroke();
        fill(255, 255, 255);
        arc(bitmojiX+(bitmojiHeight/100*150),bitmojiY+(bitmojiHeight/100*180),(bitmojiHeight/100     *30),(bitmojiHeight/100*21),0,180);//smile
    };
    
    var drawArthurBitmoji = function(bitmojiX,bitmojiY,bitmojiHeight)
    {
        drawArthurBody(bitmojiX,bitmojiY,bitmojiHeight);
        drawArthurHead(bitmojiX,bitmojiY,bitmojiHeight);
    };


var currentScene = 1;//1 = splashscreen, 2 = gamescreen

var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 169; //original-150
    this.height = config.height || 45; //original-50
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() {
    fill(255, 255, 255);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+9, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};


var space = function(){

          background (0, 0, 0);
          fill(255, 0, 0);
          textSize(50);
          text("Space Race",65,35);
          textSize(20);
          text("Coded by Arthur Souza",90,280);
          textSize(11);
          text("Use Spacebar to Fly Up, Avoid Space Debris and Beat Your Previous Score",15,330);
        
              
              drawArthurBitmoji(225,53,75);//draws Arthur's Bitmoji
        
          
              var intro = new Button({
                x: 115,
                y: 165,
                label: "CLICK TO RACE!",
                onClick: function() {
                    currentScene = 2;
                    //race();
                }
            });
            intro.draw();//calls button function and assigns task if selected
        
        mouseClicked = function() {
            intro.handleMouseClick();
        };
};

var race = function()
{
    
    var score = 0;
    var scoreDirection = 1;
    
    var Ship = function(x, y) {
        this.x = x;
        this.y = y;
        this.img = getImage("space/rocketship");
    };//Bitmoji Constructor Function
    
    Ship.prototype.draw = function() {
        fill(255, 0, 0);
        this.y = constrain(this.y, 0, height-50);
        image(this.img, this.x, this.y, 40, 40);
        
        if(this.y < 40 && scoreDirection === 1){
            score = score+2.5;
            scoreDirection = scoreDirection+1;
        }
        else if(this.y > 300 && scoreDirection === 2){
            score = score+2.5;
            scoreDirection = scoreDirection-1;
            
        }
        
    };//Calls Bitmoji Constrctor Functions
    
    Ship.prototype.hop = function() {
        this.img = getImage("space/rocketship");
        this.y -= 5;
    };//Makes Bitmoji Go UP
    
    Ship.prototype.checkForCarHit = function(car) {
        if ((car.x >= this.x && car.x <= (this.x + 40)) &&
            (car.y >= this.y && car.y <= (this.y + 40))) {
            car.y = -400;
            score--;//Subtracts SCORE if bit over specific car
        }
    };  //Everthing Above This Line Creates the BITMOJI
    
        //ellipses
    
    var debris = 45;
    var xPositions = [];
    var yPositions = [];
    
        for (var j = 1; j <= debris; j++) {
            xPositions.push(round(random(10,400)));
            yPositions.push(round(random(10,292)));
    
        }


        draw = function() {
            background(0, 0, 0);
            drawArthurBitmoji(315,295,40);//draws Arthur's Bitmoji
            
            
            
            for (var i = 0; i < xPositions.length; i++) {
                
                noStroke();
                fill (250, 250, 250);
                ellipse(xPositions[i], yPositions[i], 10, 10);
                xPositions[i] += random(0,2);
                
                if (xPositions[i] > 400) {
                    xPositions [i] = 0;
                }
            }
        };

};

draw = function()
{
    
    if (currentScene === 1)
    {
        space();
        
    }else if(currentScene === 2){
        race();
    }
};
